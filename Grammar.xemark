#XEMARK_0
xemark is a simple markdown grammar that allows for simple blog html to be generated from a set of rules

@XEMARK Grammer Document
~style
~secondstyle
~as long as these are consecutive they'll render


#:id:Rules
=====================
<
- All documents begin with #XEMARK_ followed by a version number.
	<
	- Currently the version doesn't matter so long as there is a number.
	>
- All formatting characters are the first character of a line, or after tabs
- If you'd like no indent whatsover, escape the formatter with a !
- You can use the < character to begin a list, and > to end one.
- While creating a list, use the - to mark an item.
- You can use the = to create a dividing line.
- styles are directly beneath the title or else they will not be rendered
- Links are rendered with -> with the link text on the left and the link url on the right ->
>

##In BNF:
======================

 <char> ::= <ascii character>
 <text> ::= <char>, {<char>}
 <number> ::= '0' | '1' | '2' | '3' | '4' | '5'| '6' | '7' | '8' | '9' 
 <newline> ::= '\n'
 <tab> ::= '\t'
 <format_on> ::= <newline> | <tab>
 <escape> ::= '!' , <format_on>
 <header> ::= '#', {'#'}
 <item> ::= '-', {<char>}
 <list> ::= '<' <format> '>'
 <title> ::= '@', {<char>}, <newline>
 <style> ::= '~', {<char>}
 <identifier> ::= ":" <char> ,{ <char> } ":"
 <divide> ::= "=", {"="}
 <formatter> ::= <header> | <list> |  <divide> | <item> 
 <format> ::= <format_on> <formatter> <newline>
 <style format> ::= <title> <newline> <style>
 <link> ::= <char>, {<char>} '-','>', <char>, {<char>}
 <term> ::= <formatter>[<identifier>] | <escape> | <text> | <style format> | <link>
 <page> ::= <title> 
 <version> ::= <number> , {<number>}
 <start> ::= '#XEMARK_' <version> <newline>
 <document> ::= <start> <title> , [{<term>}]





My personal notes:
the number of # determine how small the header is
you may open lists within each other
each formatter is at the beginning of the line or indent. (it follows a newline or a tab)
identifier is used to place id's onto elements
documents must start with a <start> term otherwise they are invalid
technically you can put any formatter into a list and it's valid, however should I only allow it to be items?
style's chars are the name of the file we'll include as a style